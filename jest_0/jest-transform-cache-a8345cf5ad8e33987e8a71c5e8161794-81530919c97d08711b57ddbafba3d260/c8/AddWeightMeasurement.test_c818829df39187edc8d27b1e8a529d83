// import React from 'react';
// import AddWeightMeasurement from '../components/container/AddWeightMeasurement';
// import HeaderTitle from '../components/presentational/HeaderTitle'
// import InputField from '../components/presentational/InputField'
// import { shallow } from 'enzyme';

// describe('<AddWeightMeasurement />', () => {
//     let appWrapper;
//     let appInstance;
//     const app = (disableLifecycleMethods = false) =>
//       shallow(<AddWeightMeasurement />, { disableLifecycleMethods });

//     beforeEach(() => {
//       appWrapper = app();
//       appInstance = appWrapper.instance();
//     });

//     afterEach(() => {
//       appWrapper = undefined;
//       appInstance = undefined;
//     });

//     it('renders without crashing', () => {
//       expect(app().exists()).toBe(true);
//     });

//     it('renders a div', () => {
//         // Dzięki metodzie first() sprawdzamy czy div jest pierwszym dzieckiem <App />
//         expect(
//           appWrapper
//             .first()
//             .type(),
//         ).toBe('div');
//       });

//       describe('the rendered div', () => {
//         const div = () => appWrapper.first();

//         it('contains everything else that gets rendered', () => {
//           // Podczas wywoływania children() na wrapperze, enzyme pomija w wyszukiwaniu zewnętrzny węzeł. 
//           // Dzięki temu możemy sprawdzić czy zawartość diva
//           // faktycznie zawiera wszystko co renderuje <App />
//           expect(div().children()).toEqual(appWrapper.children());
//         });
//       });

//       it('renders <HeaderTitle />', () => {
//         // Metoda find zwraca listę odnalezionych komponentów.
//         // Najłatwiej sprawdzić czy komponent został wyrenderowany 
//         // poprzez prostą asercję jej długości.
//         expect(appWrapper.find(HeaderTitle).length).toBe(1);
//       });

//       it('renders <InputField/>', () => {
//         // Metoda find zwraca listę odnalezionych komponentów.
//         // Najłatwiej sprawdzić czy komponent został wyrenderowany 
//         // poprzez prostą asercję jej długości.
//         expect(appWrapper.find(InputField).length).not.toBe(0)
//       });

//       describe('the rendered <HeaderTitle />', () => {
//         const headerTitle = () => appWrapper.find(HeaderTitle);

//         it('receives number that is less or equal 6 as a "headerNumber" prop', () => {
//           expect(headerTitle().prop('headerNumber')).toBeLessThanOrEqual(6)
//         });
//       });
// })
"use strict";